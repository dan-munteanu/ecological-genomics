#get working directory
getwd()
setwd("C:/Users/redni/Downloads")
#its in users on C://

#get libraries (already installed with BioC)
library(DESeq2)
library(dplyr)
library(tidyr)
library(ggplot2)
library(scales)
library(ggpubr)
library(wesanderson)
library(vsn)

#Read table from text file (F3 generation copes')
countsTablef3 <- read.table("DE_counts_F3 - Copy.txt", header=TRUE, row.names=1)

#Round read counts numbers
countsTableRoundf3 <- round(countsTablef3)

#get top few lines and size of counts table
head(countsTableRoundf3)
dim(countsTableRoundf3)

#View table in console
View(countsTableRoundf3)

#import sample descriptors (group, line, and environment)
condsf3 <- read.delim("RT_tonsa_F3_samples - Copy.txt", header=TRUE, stringsAsFactors=TRUE, row.names=1)
head(condsf3)

#make bar plot depicting read count by sample (column) and mean
print(condsf3)
colSums(countsTableRoundf3)
mean(colSums(countsTableRoundf3))
barplot(colSums(countsTableRoundf3), names.arg=colnames(countsTableRound),cex.names=0.5,las=3)
abline(h=mean(colSums(countsTableRoundf3)), col="blue", lwd=2)

#get mean and median counts per gene
rowSums(countsTableRoundf3)
mean(rowSums(countsTableRoundf3))
median(rowSums(countsTableRoundf3))

#make histogram of counts per gene
apply(countsTableRoundf3,2,mean)
apply(countsTableRoundf3,1,mean)
hist(apply(countsTableRoundf3,1,mean),xlim=c(0,1000), breaks=10000)

#make DEseq object
dds <- DESeqDataSetFromMatrix(countData = countsTableRoundf3, colData = conds, design = ~ line + environment + line:environment)
dim(dds)

#filter genes with too few reads (160 across all samples)
dds <- dds[rowSums(counts(dds)) >160]
dim(dds)


#run DEseq model above
dds <- DESeq(dds)

#list results
resultsNames(dds)

#PCA analysis
vsdf3 <- vst(dds, blind=FALSE)
dataf3 <- plotPCA(vsdf3, intgroup=c("line", "environment"),returnData=TRUE)
percentVarf3 <- round(100 * attr(data, "percentVar"))
percentVarf3


#plot PCA
ggplot(dataf3, aes(PC1, PC2, color=environment, shape=line)) + geom_point(size=4, alpha=0.85) + xlab(paste0("PC1: ", percentVar[1], "% variance")) + ylab(paste0("PC2: ",percentVar[2], "% variance")) + theme_minimal()

#main effect of environment
dds <- DESeqDataSetFromMatrix(countData = countsTableRoundf3, colData = condsf3, 
                              design = ~ line + environment)

dds <- DESeq(dds, test="LRT", reduced=~line)
resultsNames(dds)

#order and list and summarize results from specific contrasts
resEnv <- results(dds, alpha = 0.05)
resEnv <- resEnv[order(resEnv$padj),]
head(resEnv)

summary(resEnv)

resEnv <- resEnv[!is.na(resEnv$padj),]

degsEnvf3 <- row.names(resEnv[resEnv$padj < 0.05,]) 

#effect of line 
dds <- DESeqDataSetFromMatrix(countData = countsTableRoundf3, colData = condsf3, 
                              design = ~ environment + line)

dds <- DESeq(dds, test="LRT", reduced=~environment)
resultsNames(dds)

resLine <- results(dds, alpha = 0.05)
resLine <- resLine[order(resLine$padj),]
head(resLine)


summary(resLine)

resLine <- resLine[!is.na(resLine$padj),]

degslinef3 <- row.names(resLine[resLine$padj < 0.05,])


#test for interaction
dds <- DESeqDataSetFromMatrix(countData = countsTableRoundf3, colData = condsf3, 
                              design = ~ environment + line + environment:line)

dds <- DESeq(dds, test="LRT", reduced=~environment + line)
resultsNames(dds)

resInt <- results(dds, alpha = 0.05)
resInt <- resInt[order(resInt$padj),]
head(resInt)

summary(resInt)


resInt <- resInt[!is.na(resInt$padj),]

degsIntf3 <- row.names(resInt[resInt$padj < 0.05,])

library(eulerr)

# Total
length(degsEnvf3)  # 828
length(degslinef3)  # 1645
length(degsIntf3)  # 283

# Intersections
length(intersect(degsEnvf3,degslinef3))  # 141
length(intersect(degsEnvf3,degsIntf3))  # 14
length(intersect(degsIntf3,degslinef3))  # 32

intELf3 <- intersect(degsEnvf3,degslinef3)
length(intersect(degsIntf3,intELf3)) # 7

# Number unique
828-141-14-7 # 666
1645-141-32-7 # 1465
283-14-32-7 # 230


fit1 <- euler(c("Env" = 666, "Line" = 1465, "Interaction" = 230, "Env&Line" = 141, "Env&Interaction" = 14, "Line&Interaction" = 32, "Env&Line&Interaction" = 7))

plot(fit1,  lty = 1:3, quantities = TRUE)


#plot overlapping DE genes for each category between F1 and F3
length(degsEnv)  # 448
length(degsline)  # 226
length(degsInt)  # 3854
length(degsEnvf3)  # 828
length(degslinef3)  # 1645
length(degsIntf3)  # 283

#env
length(intersect(degsEnv,degsEnvf3)) #54
448-54 #394
828-54 #774

fit1 <- euler(c("Env F1" = 394, "Env F3" = 774, "Env F1&Env F3" = 54))

plot(fit1,  lty = 1:3, quantities = TRUE)

#line
length(intersect(degsline,degslinef3)) #49
226-49 #177
1645-49 #1596

fit1 <- euler(c("Line F1" = 177, "Line F3" = 1596, "Line F1&Line F3" = 49))

plot(fit1,  lty = 1:3, quantities = TRUE)

#interaction
length(intersect(degsInt,degsIntf3)) #105
3854-105 #3749
283-105 #178

fit1 <- euler(c("Int F1" = 3749, "Int F3" = 178, "Int F1&Int F3" = 105))

plot(fit1,  lty = 1:3, quantities = TRUE)